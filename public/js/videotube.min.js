(() => {
    function t(t, n) {
        return function (t) {
            if (Array.isArray(t)) return t
        }(t) || function (t, e) {
            var n = null == t ? null : "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];
            if (null == n) return;
            var i, o, r = [], a = !0, d = !1;
            try {
                for (n = n.call(t); !(a = (i = n.next()).done) && (r.push(i.value), !e || r.length !== e); a = !0) ;
            } catch (t) {
                d = !0, o = t
            } finally {
                try {
                    a || null == n.return || n.return()
                } finally {
                    if (d) throw o
                }
            }
            return r
        }(t, n) || function (t, n) {
            if (!t) return;
            if ("string" == typeof t) return e(t, n);
            var i = Object.prototype.toString.call(t).slice(8, -1);
            "Object" === i && t.constructor && (i = t.constructor.name);
            if ("Map" === i || "Set" === i) return Array.from(t);
            if ("Arguments" === i || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i)) return e(t, n)
        }(t, n) || function () {
            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
        }()
    }

    function e(t, e) {
        (null == e || e > t.length) && (e = t.length);
        for (var n = 0, i = new Array(e); n < e; n++) i[n] = t[n];
        return i
    }

    var n;
    !function (t, e, n) {
        n = n || window;
        var i = !1;
        n.addEventListener(t, (function () {
            i || (i = !0, requestAnimationFrame((function () {
                n.dispatchEvent(new CustomEvent(e)), i = !1
            })))
        }))
    }("resize", "optimizedResize"), (n = n || window).animation = function (e, n, i) {
        var o = n.count, r = 0;
        n.start && n.start.forEach((function (t) {
            e.style[t[0]] = t[1]
        }));
        var a = [];
        n.anim.forEach((function (e) {
            var n = t(e, 3), i = n[0], r = n[1], d = n[2], u = Math.max(r, d), c = Math.min(r, d), l = (u - c) / o;
            a.push({style: i, from: r, to: d, step: l, reverse: c === d})
        })), requestAnimationFrame((function t() {
            a.forEach((function (t) {
                t.reverse ? t.from -= t.step : t.from += t.step, e.style[t.style] = t.from
            })), ++r < o ? requestAnimationFrame(t) : (n.end && n.end.forEach((function (t) {
                e.style[t[0]] = t[1]
            })), i && i())
        }))
    };
    document.addEventListener("DOMContentLoaded", (function () {
        var t = document.createElement("div");
        t.className = "videotube-modal-overlay", document.body.insertAdjacentElement("beforeend", t);
        var e = document.createElement("div");
        e.id = "videotube-modal-container";
        var n = [[3840, 2160], [2560, 1440], [1920, 1080], [1280, 720], [854, 420], [640, 360], [426, 240]],
            i = function () {
                var t = n.find((function (t) {
                    return t[0] < window.visualViewport.width
                })) || n[n.length - 1], i = document.getElementById("videotube-modal");
                i.width = t[0], i.height = t[1], e.style.cssText = "\n\t\t\twidth: ".concat(t[0], ";\n\t\t\theight: ").concat(t[1], ";\n\t\t")
            }, o = function () {
                var n = window.visualViewport.height, i = window.visualViewport.width, o = e.style.width,
                    r = e.style.height;
                e.style.left = (i - o) / 2, e.style.top = (n - r) / 2, t.style.height = document.documentElement.clientHeight
            }, r = function () {
                o(), i()
            }, a = function () {
                animation(t, {end: [["display", "none"]], anim: [["opacity", 1, 0]], count: 20}, (function () {
                    t.textContent = ""
                })), window.removeEventListener("optimizedResize", r), document.removeEventListener("keyup", d)
            }, d = function (t) {
                27 === t.keyCode && a()
            };
        t.addEventListener("click", a), document.addEventListener("click", (function (e) {
            var n = e.target.closest(".tube");
            if (n) {
                var a = n.href,
                    u = a.includes("youtube") ? a.match(/(\?|&)v=([^&]+)/)[2] : a.match(/(\.be\/)([^&]+)/)[2];
                0 !== u.length && (e.preventDefault(), animation(t, {
                    start: [["display", "block"]],
                    anim: [["opacity", 0, 1]],
                    count: 20
                }), t.insertAdjacentHTML("beforeend", '\n\t\t\t<div id="videotube-modal-loading">Загрузка...</div>  \n            ' +
                    '<div id="videotube-modal-container">\n           \n                ' +
                    '<div id="videotube-modal-block">\n                     ' +
                    '<div id="videotube-modal-close">X</div>\n                    ' +
                    '<iframe src="https://youtube.com/embed/'.concat(u, '?autoplay=1" \n                        frameborder="0"\n                        id="videotube-modal" \n                        allowfullscreen\n                        allow="autoplay">\n                    ' +
                        '</iframe>\n                ' +
                        '</div>  \n            ' +
                        '</div>\t\n\t\t')), i(), o(), window.addEventListener("optimizedResize", r), document.addEventListener("keyup", d))
            }
        }))
    }))
})();
